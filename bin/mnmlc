#!/usr/bin/env mnml

(load
  "@lib/args.l" "@lib/cc.l" "@lib/has.l" "@lib/map.l" "@lib/rev.l" "@lib/split.l"
  '(io prinl)
  '(logic and =)
  '(std |> car cdr setq let if prog sym when))

(def usage ()
  "Print out a usage string for this script."
  (let ((arg0 . (car (cdr ARGV)))
        (prgn . (car (rev (split arg0 ^/)))))
    (prinl "Usage: " prgn " -c FILE.l -o FILE.c -m MODULE -s SYM1,SYM2,...")
    (prinl)
    (prinl "  -c  Minima.l source file")
    (prinl "  -m  Module name")
    (prinl "  -o  Target C file")
    (prinl "  -s  Comma-separated list of symbols")
    (prinl "  -h  Print this help")
    ))

(setq options
  '(("-c" . (\ (SRC) (setq SRC SRC)))
    ("-m" . (\ (MOD) (setq MOD MOD)))
    ("-o" . (\ (DST) (setq DST DST)))
    ("-s" . (\ (SYM) (setq SYM (map sym (split SYM ^,)))))
    ("-h" . usage)))

(let ((args . (args:parse options)))
  (if (|> (has args "-c") (and (has args "-o")) (and (has args "-m")) (and (has args "-s")))
    (let ((S . (load SRC)))
      (if S
        (= SYM (cc:compile MOD SYM DST))
        (prog
          (prinl "Failed to load: " SRC)
          (usage))))
    (if (not (has args "-h"))
      (usage))))

# vim: ft=minimal:ts=2:sts=2:sw=2:et:tw=80
